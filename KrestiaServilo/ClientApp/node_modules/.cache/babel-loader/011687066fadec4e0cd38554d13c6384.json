{"ast":null,"code":"import Axios from \"axios\";\nexport async function trovi(peto) {\n  const respondo = await Axios.get(`/api/trovi/${peto}`);\n  return await respondo.data;\n}\nexport async function alporti(vorto) {\n  const respondo = await Axios.get(`/api/vorto/${vorto}`);\n  return await respondo.data;\n}\nexport async function alportiĈiujn() {\n  const respondo = await Axios.get(`/api/vortlisto/alfabeta`);\n  return await respondo.data;\n}\nexport async function alportiĈiujnTipajn() {\n  const respondo = await Axios.get(\"/api/vortlisto/tipo\");\n  return await respondo.data;\n}\nexport async function alportiĈiujnKategoriojn() {\n  const respondo = await Axios.get(\"/api/vortlisto/kategorioj\");\n  return await respondo.data;\n}\nexport async function legi(eniro) {\n  try {\n    const respondo = await Axios.post(\"/api/legi\", {\n      eniro\n    });\n    return await respondo.data;\n  } catch (e) {\n    if (e.response.status === 422) {\n      const data = e.response.data;\n      return [data.item1, data.item2];\n    } else {\n      throw e;\n    }\n  }\n}\nconst glosoj = new Map();\nexport async function alportiGloson(vorto) {\n  if (glosoj.has(vorto)) {\n    return {\n      gloso: glosoj.get(vorto)\n    };\n  }\n\n  try {\n    const respondo = await Axios.get(`/api/gloso/${vorto}`);\n\n    if (respondo.status === 200) {\n      const rezulto = await respondo.data;\n      glosoj.set(vorto, rezulto.gloso);\n      return rezulto;\n    } else {\n      return null;\n    }\n  } catch (e) {\n    if (e.response.status === 404) return null;\n    throw e;\n  }\n}","map":{"version":3,"sources":["D:/Projects/Krestia/KrestiaServilo/ClientApp/src/API.ts"],"names":["Axios","trovi","peto","respondo","get","data","alporti","vorto","alportiĈiujn","alportiĈiujnTipajn","alportiĈiujnKategoriojn","legi","eniro","post","e","response","status","item1","item2","glosoj","Map","alportiGloson","has","gloso","rezulto","set"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAO,eAAeC,KAAf,CAAqBC,IAArB,EAAmC;AACvC,QAAMC,QAAQ,GAAG,MAAMH,KAAK,CAACI,GAAN,CAAW,cAAaF,IAAK,EAA7B,CAAvB;AACA,SAAQ,MAAMC,QAAQ,CAACE,IAAvB;AACF;AAED,OAAO,eAAeC,OAAf,CAAuBC,KAAvB,EAAsC;AAC1C,QAAMJ,QAAQ,GAAG,MAAMH,KAAK,CAACI,GAAN,CAAW,cAAaG,KAAM,EAA9B,CAAvB;AACA,SAAQ,MAAMJ,QAAQ,CAACE,IAAvB;AACF;AAED,OAAO,eAAeG,YAAf,GAA8B;AAClC,QAAML,QAAQ,GAAG,MAAMH,KAAK,CAACI,GAAN,CAAW,yBAAX,CAAvB;AACA,SAAQ,MAAMD,QAAQ,CAACE,IAAvB;AACF;AAED,OAAO,eAAeI,kBAAf,GAAoC;AACxC,QAAMN,QAAQ,GAAG,MAAMH,KAAK,CAACI,GAAN,CAAU,qBAAV,CAAvB;AACA,SAAQ,MAAMD,QAAQ,CAACE,IAAvB;AACF;AAED,OAAO,eAAeK,uBAAf,GAAyC;AAC7C,QAAMP,QAAQ,GAAG,MAAMH,KAAK,CAACI,GAAN,CAAU,2BAAV,CAAvB;AACA,SAAQ,MAAMD,QAAQ,CAACE,IAAvB;AACF;AAED,OAAO,eAAeM,IAAf,CAAoBC,KAApB,EAA6D;AACjE,MAAI;AACD,UAAMT,QAAQ,GAAG,MAAMH,KAAK,CAACa,IAAN,CAAW,WAAX,EAAwB;AAAED,MAAAA;AAAF,KAAxB,CAAvB;AACA,WAAQ,MAAMT,QAAQ,CAACE,IAAvB;AACF,GAHD,CAGE,OAAOS,CAAP,EAAU;AACT,QAAIA,CAAC,CAACC,QAAF,CAAWC,MAAX,KAAsB,GAA1B,EAA+B;AAC5B,YAAMX,IAAI,GAAGS,CAAC,CAACC,QAAF,CAAWV,IAAxB;AACA,aAAO,CAACA,IAAI,CAACY,KAAN,EAAaZ,IAAI,CAACa,KAAlB,CAAP;AACF,KAHD,MAGO;AACJ,YAAMJ,CAAN;AACF;AACH;AACH;AAED,MAAMK,MAAM,GAAG,IAAIC,GAAJ,EAAf;AAEA,OAAO,eAAeC,aAAf,CACJd,KADI,EAEyB;AAC7B,MAAIY,MAAM,CAACG,GAAP,CAAWf,KAAX,CAAJ,EAAuB;AACpB,WAAO;AAAEgB,MAAAA,KAAK,EAAEJ,MAAM,CAACf,GAAP,CAAWG,KAAX;AAAT,KAAP;AACF;;AACD,MAAI;AACD,UAAMJ,QAAQ,GAAG,MAAMH,KAAK,CAACI,GAAN,CAAW,cAAaG,KAAM,EAA9B,CAAvB;;AACA,QAAIJ,QAAQ,CAACa,MAAT,KAAoB,GAAxB,EAA6B;AAC1B,YAAMQ,OAAO,GAAI,MAAMrB,QAAQ,CAACE,IAAhC;AACAc,MAAAA,MAAM,CAACM,GAAP,CAAWlB,KAAX,EAAkBiB,OAAO,CAACD,KAA1B;AACA,aAAOC,OAAP;AACF,KAJD,MAIO;AACJ,aAAO,IAAP;AACF;AACH,GATD,CASE,OAAOV,CAAP,EAAU;AACT,QAAIA,CAAC,CAACC,QAAF,CAAWC,MAAX,KAAsB,GAA1B,EAA+B,OAAO,IAAP;AAC/B,UAAMF,CAAN;AACF;AACH","sourcesContent":["import Axios from \"axios\";\r\n\r\nexport async function trovi(peto: string) {\r\n   const respondo = await Axios.get(`/api/trovi/${peto}`);\r\n   return (await respondo.data) as VortoRezulto;\r\n}\r\n\r\nexport async function alporti(vorto: string) {\r\n   const respondo = await Axios.get(`/api/vorto/${vorto}`);\r\n   return (await respondo.data) as PlenaVortoRespondo;\r\n}\r\n\r\nexport async function alportiĈiujn() {\r\n   const respondo = await Axios.get(`/api/vortlisto/alfabeta`);\r\n   return (await respondo.data) as VortoRespondo[];\r\n}\r\n\r\nexport async function alportiĈiujnTipajn() {\r\n   const respondo = await Axios.get(\"/api/vortlisto/tipo\");\r\n   return (await respondo.data) as TipaVortlisto;\r\n}\r\n\r\nexport async function alportiĈiujnKategoriojn() {\r\n   const respondo = await Axios.get(\"/api/vortlisto/kategorioj\");\r\n   return (await respondo.data) as KategoriaVortlisto;\r\n}\r\n\r\nexport async function legi(eniro: string): Promise<Rezulto | Eraro> {\r\n   try {\r\n      const respondo = await Axios.post(\"/api/legi\", { eniro });\r\n      return (await respondo.data) as Rezulto;\r\n   } catch (e) {\r\n      if (e.response.status === 422) {\r\n         const data = e.response.data;\r\n         return [data.item1, data.item2];\r\n      } else {\r\n         throw e;\r\n      }\r\n   }\r\n}\r\n\r\nconst glosoj = new Map<string, string>();\r\n\r\nexport async function alportiGloson(\r\n   vorto: string\r\n): Promise<GlosaRezulto | null> {\r\n   if (glosoj.has(vorto)) {\r\n      return { gloso: glosoj.get(vorto)! };\r\n   }\r\n   try {\r\n      const respondo = await Axios.get(`/api/gloso/${vorto}`);\r\n      if (respondo.status === 200) {\r\n         const rezulto = (await respondo.data) as GlosaRezulto;\r\n         glosoj.set(vorto, rezulto.gloso);\r\n         return rezulto;\r\n      } else {\r\n         return null;\r\n      }\r\n   } catch (e) {\r\n      if (e.response.status === 404) return null;\r\n      throw e;\r\n   }\r\n}\r\n\r\nexport interface VortoRezulto {\r\n   malinflektitaVorto: string | undefined;\r\n   plenigitaVorto: string | undefined;\r\n   rezultoj: VortoRespondo[];\r\n   gloso: string | undefined;\r\n   malinflektajŜtupoj: string[] | undefined;\r\n   glosajVortoj: string[] | undefined;\r\n   glosajŜtupoj: string[][] | undefined;\r\n   bazajVortoj: string[] | undefined;\r\n   nombroRezulto: number | undefined;\r\n}\r\n\r\nexport interface VortoRespondo {\r\n   vorto: string;\r\n   signifo: string;\r\n}\r\n\r\nexport interface PlenaVortoRespondo extends VortoRespondo {\r\n   kategorioj: string[];\r\n   noto: string;\r\n   radikoj: string[];\r\n   vorttipo: string;\r\n   silaboj: string[];\r\n   inflektitajFormoj: {\r\n      [key: string]: string;\r\n   };\r\n   blissimbolo?: number[];\r\n   ujoj: [string, string, string];\r\n   frazaSignifo?: string;\r\n}\r\n\r\nexport interface TipaVortlisto {\r\n   [key: string]: VortoRespondo[];\r\n}\r\n\r\nexport interface KategoriaVortlisto {\r\n   [key: string]: {\r\n      vortoj: VortoRespondo[];\r\n      subkategorioj: string[];\r\n      superkategorioj: string[];\r\n   };\r\n}\r\n\r\nexport interface MalinflektitaVorto {\r\n   originalaVorto: EniraVorto;\r\n   bazaVorto: string;\r\n   inflekcioŜtupoj: MalinflektaŜtupo[];\r\n}\r\n\r\nexport type MalinflektaŜtupo =\r\n   | {\r\n        tipo: \"Nebazo\";\r\n        vorttipo: string;\r\n        inflekcio: string;\r\n        restantaVorto: string;\r\n     }\r\n   | {\r\n        tipo: \"Bazo\";\r\n        vorttipo: string;\r\n        inflekcio: string;\r\n        bazaVorto: string;\r\n     };\r\n\r\nexport interface EniraVorto {\r\n   vico: number;\r\n   pozo: number;\r\n   vorto: string;\r\n}\r\n\r\nexport type Argumento =\r\n   | {\r\n        tipo: \"ArgumentaVorto\";\r\n        vorto: ModifeblaVorto;\r\n     }\r\n   | {\r\n        tipo: \"ene\";\r\n        predikato: Predikato;\r\n        ene: MalinflektitaVorto;\r\n     }\r\n   | {\r\n        tipo: \"mine\";\r\n        predikato: Predikato;\r\n        mine: MalinflektitaVorto;\r\n     }\r\n   | {\r\n        tipo: \"nombro\";\r\n        nombro: number;\r\n     };\r\n\r\nexport interface ModifeblaVorto {\r\n   kapo: MalinflektitaVorto;\r\n   modifantoj: Modifanto[];\r\n}\r\n\r\nexport type Modifanto =\r\n   | {\r\n        tipo: \"Pridiranto\";\r\n        argumento: Argumento;\r\n     }\r\n   | {\r\n        tipo: \"EcoDe\";\r\n        argumento: Argumento;\r\n     }\r\n   | {\r\n        tipo: \"ModifantoKunFrazo\";\r\n        modifanto: string;\r\n        frazo: Predikato;\r\n     }\r\n   | {\r\n        tipo: \"ModifantoKunArgumentoj\";\r\n        modifanto: string;\r\n        argumento: Argumento[];\r\n     }\r\n   | {\r\n        tipo: \"Mine\";\r\n        predikato: Predikato;\r\n     }\r\n   | {\r\n        tipo: \"Ene\";\r\n        predikato: Predikato;\r\n     }\r\n   | {\r\n        tipo: \"Keni\";\r\n        argumento1: Argumento;\r\n        argumento2: Argumento;\r\n     }\r\n   | {\r\n        tipo: \"Pini\";\r\n        argumento1: Argumento;\r\n        argumento2: Argumento;\r\n        argumento3: Argumento;\r\n     };\r\n\r\nexport interface Rezulto {\r\n   frazoj: Predikato[];\r\n   argumentoj: Argumento[];\r\n}\r\n\r\nexport interface Predikato {\r\n   kapo: Verbo;\r\n   argumentoj: Argumento[];\r\n}\r\n\r\nexport interface Verbo {\r\n   vorto: ModifeblaVorto;\r\n}\r\n\r\nexport type Eraro = [EniraVorto, string];\r\n\r\nexport interface GlosaRezulto {\r\n   gloso: string;\r\n}\r\n"]},"metadata":{},"sourceType":"module"}