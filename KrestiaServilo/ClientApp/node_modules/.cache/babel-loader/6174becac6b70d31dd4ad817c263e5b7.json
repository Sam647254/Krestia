{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar getHash = exports.getHash = function getHash() {\n  return decodeURI(window.location.hash.slice(1));\n};\n\nvar updateHash = exports.updateHash = function updateHash(hash, affectHistory) {\n  if (affectHistory) {\n    window.location.hash = hash;\n  } else {\n    window.location.replace(\"#\" + hash);\n  }\n}; // remove hash in url without affecting history or forcing reload\n\n\nvar removeHash = exports.removeHash = function removeHash() {\n  history.replaceState(\"\", document.title, window.location.pathname + window.location.search);\n};","map":{"version":3,"sources":["D:/Projects/Krestia/KrestiaServilo/ClientApp/.yarn/$$virtual/react-scrollable-anchor-virtual-8625232b1b/0/cache/react-scrollable-anchor-npm-0.6.1-43a3e7539e-a86939f348.zip/node_modules/react-scrollable-anchor/lib/utils/hash.js"],"names":["Object","defineProperty","exports","value","getHash","decodeURI","window","location","hash","slice","updateHash","affectHistory","replace","removeHash","history","replaceState","document","title","pathname","search"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAC3CC,EAAAA,KAAK,EAAE;AADoC,CAA7C;;AAGA,IAAIC,OAAO,GAAGF,OAAO,CAACE,OAAR,GAAkB,SAASA,OAAT,GAAmB;AACjD,SAAOC,SAAS,CAACC,MAAM,CAACC,QAAP,CAAgBC,IAAhB,CAAqBC,KAArB,CAA2B,CAA3B,CAAD,CAAhB;AACD,CAFD;;AAIA,IAAIC,UAAU,GAAGR,OAAO,CAACQ,UAAR,GAAqB,SAASA,UAAT,CAAoBF,IAApB,EAA0BG,aAA1B,EAAyC;AAC7E,MAAIA,aAAJ,EAAmB;AACjBL,IAAAA,MAAM,CAACC,QAAP,CAAgBC,IAAhB,GAAuBA,IAAvB;AACD,GAFD,MAEO;AACLF,IAAAA,MAAM,CAACC,QAAP,CAAgBK,OAAhB,CAAwB,MAAMJ,IAA9B;AACD;AACF,CAND,C,CAQA;;;AACA,IAAIK,UAAU,GAAGX,OAAO,CAACW,UAAR,GAAqB,SAASA,UAAT,GAAsB;AAC1DC,EAAAA,OAAO,CAACC,YAAR,CAAqB,EAArB,EAAyBC,QAAQ,CAACC,KAAlC,EAAyCX,MAAM,CAACC,QAAP,CAAgBW,QAAhB,GAA2BZ,MAAM,CAACC,QAAP,CAAgBY,MAApF;AACD,CAFD","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar getHash = exports.getHash = function getHash() {\n  return decodeURI(window.location.hash.slice(1));\n};\n\nvar updateHash = exports.updateHash = function updateHash(hash, affectHistory) {\n  if (affectHistory) {\n    window.location.hash = hash;\n  } else {\n    window.location.replace(\"#\" + hash);\n  }\n};\n\n// remove hash in url without affecting history or forcing reload\nvar removeHash = exports.removeHash = function removeHash() {\n  history.replaceState(\"\", document.title, window.location.pathname + window.location.search);\n};"]},"metadata":{},"sourceType":"script"}