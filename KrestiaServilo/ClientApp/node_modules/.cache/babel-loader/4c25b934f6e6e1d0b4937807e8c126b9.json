{"ast":null,"code":"var _jsxFileName = \"D:\\\\Projects\\\\Krestia\\\\KrestiaServilo\\\\ClientApp\\\\src\\\\Partoj\\\\Vorto.tsx\";\nimport React, { useEffect, useState } from \"react\";\nimport { Link, useParams } from \"react-router-dom\";\nimport { alporti } from \"../API\";\nimport \"./Vorto.scss\";\nimport { Timeran } from \"./Timeran\";\nconst inflekcioj = new Map(Object.entries({\n  Infinitivo: \"Infinitive\",\n  Difinito: \"Definite\",\n  UnuNombro: \"Singular\",\n  PluraNombro: \"Plural\",\n  Fokuso: \"Focus\",\n  Havaĵo: \"Possession\",\n  Progresivo: \"Progressive\",\n  Perfekto: \"Perfect\",\n  Intenco: \"Intention\",\n  Desiderativo: \"Desiderative\",\n  PredikativoEsti: \"Predicative identity\",\n  AtributivoEstiAntaŭ: \"Attributive identity (prefix)\",\n  AtributivoEstiMalantaŭ: \"Attributive identity (postfix)\",\n  Havado: \"Possessive\",\n  UnuHavado: \"Possessive (singular)\",\n  PluraHavado: \"Possessive (plural)\",\n  Imperativo: \"Imperative\",\n  Argumento1: \"Slot-1 argument\",\n  Argumento2: \"Slot-2 argument\",\n  Argumento3: \"Slot-3 argument\",\n  Ekzistado: \"Existential\",\n  Hortativo: \"Hortative\",\n  Translativo: \"Translative\",\n  Ĝerundo: \"Gerund\",\n  SpecifaĜerundo: \"Specific gerund\",\n  PartaUjo1: \"Slot-1 partial\",\n  PartaUjo2: \"Slot-2 partial\",\n  PartaUjo3: \"Slot-3 partial\",\n  UnueUjo2: \"Slot-2 first\",\n  UnueUjo3: \"Slot-3 first\",\n  Igo: \"Causative\",\n  Sola: \"Standalone\",\n  Etigo: \"Diminutive\",\n  Reflekcio: \"Reflexive\",\n  Okazo: \"Occurrence\",\n  AktualaOkazo: \"Ongoing occurrence\",\n  FinitaOkazo: \"Complete occurrence\",\n  Hipoteza: \"Hypothetical\",\n  Kvalito: \"Quality\",\n  Optativo: \"Optative\"\n}));\nexport function Vorto() {\n  var _rezulto$ujoj;\n\n  const {\n    vorto\n  } = useParams();\n  const [rezulto, setResult] = useState();\n  const [ŝtato, setFetchState] = useState(\"alportado\");\n  useEffect(() => {\n    setFetchState(\"alportado\");\n    alporti(vorto).then(respondo => {\n      setResult(respondo);\n      setFetchState(\"alportita\");\n    }).catch(eraro => {\n      console.error(eraro.response);\n\n      if (eraro.response.status === 404) {\n        setFetchState(\"netrovita\");\n      } else {\n        setFetchState(\"eraro\");\n      }\n    });\n  }, [vorto]);\n  if (ŝtato === \"alportado\") return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 38\n    }\n  }, \"Loading...\");\n  if (ŝtato === \"netrovita\") return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 38\n    }\n  }, \"Word not found: \", vorto);\n  if (ŝtato === \"eraro\") return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 14\n    }\n  }, \"A server-side error occurred when fetching \", vorto, \".\");\n  if (rezulto == null) throw new Error(\"Unreachable state\");\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    className: \"vorto\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 10\n    }\n  }, rezulto.vorto), /*#__PURE__*/React.createElement(Timeran, {\n    alteco: 25,\n    silaboj: rezulto.silaboj,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 10\n    }\n  }), rezulto.blissimbolo != null ? /*#__PURE__*/React.createElement(Timeran, {\n    alteco: 25,\n    silaboj: rezulto.silaboj,\n    bliss: rezulto.blissimbolo,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 13\n    }\n  }) : null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"streko\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 10\n    }\n  }), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"vorttipo\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 10\n    }\n  }, rezulto.vorttipo), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 10\n    }\n  }, rezulto.signifo), rezulto.frazaSignifo != null ? /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 13\n    }\n  }, \"In context:\", \" \", /*#__PURE__*/React.createElement(\"span\", {\n    dangerouslySetInnerHTML: {\n      __html: rezulto.frazaSignifo\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 16\n    }\n  })) : null, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 10\n    }\n  }, (_rezulto$ujoj = rezulto.ujoj) === null || _rezulto$ujoj === void 0 ? void 0 : _rezulto$ujoj.map((ujo, i) => ujo == null ? null : [/*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 24\n    }\n  }, \"Slot \", i + 1, \": \", ujo), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 24\n    }\n  })])), rezulto.noto.length > 0 ? /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 13\n    }\n  }, \"Notes:\", \" \", /*#__PURE__*/React.createElement(\"span\", {\n    dangerouslySetInnerHTML: {\n      __html: rezulto.noto\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 16\n    }\n  })) : null, rezulto.radikoj.length > 0 ? /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 13\n    }\n  }, \"Roots:\", \" \", rezulto === null || rezulto === void 0 ? void 0 : rezulto.radikoj.map(r => /*#__PURE__*/React.createElement(Link, {\n    to: `/word/${r}`,\n    key: r,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 22\n    }\n  }, r)).reduce((lasta, sekva) => [lasta, \", \", sekva])) : null, (rezulto === null || rezulto === void 0 ? void 0 : rezulto.inflektitajFormoj) == null ? null : [/*#__PURE__*/React.createElement(\"h3\", {\n    key: \"h3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 18\n    }\n  }, \"Inflected forms\"), /*#__PURE__*/React.createElement(\"table\", {\n    className: \"inflekcio-tabelo\",\n    key: \"tabelo\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 18\n    }\n  }, /*#__PURE__*/React.createElement(\"thead\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 24\n    }\n  }, /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 27\n    }\n  }, \"Inflection\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 27\n    }\n  }, \"Inflected form\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 21\n    }\n  }, Object.entries(rezulto.inflektitajFormoj).map(([inflekcio, inflektitaFormo]) => /*#__PURE__*/React.createElement(\"tr\", {\n    key: inflekcio,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 30\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 33\n    }\n  }, inflekcioj.get(inflekcio) || inflekcio), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 33\n    }\n  }, inflektitaFormo)))))]);\n}","map":{"version":3,"sources":["D:/Projects/Krestia/KrestiaServilo/ClientApp/src/Partoj/Vorto.tsx"],"names":["React","useEffect","useState","Link","useParams","alporti","Timeran","inflekcioj","Map","Object","entries","Infinitivo","Difinito","UnuNombro","PluraNombro","Fokuso","Havaĵo","Progresivo","Perfekto","Intenco","Desiderativo","PredikativoEsti","AtributivoEstiAntaŭ","AtributivoEstiMalantaŭ","Havado","UnuHavado","PluraHavado","Imperativo","Argumento1","Argumento2","Argumento3","Ekzistado","Hortativo","Translativo","Ĝerundo","SpecifaĜerundo","PartaUjo1","PartaUjo2","PartaUjo3","UnueUjo2","UnueUjo3","Igo","Sola","Etigo","Reflekcio","Okazo","AktualaOkazo","FinitaOkazo","Hipoteza","Kvalito","Optativo","Vorto","vorto","rezulto","setResult","ŝtato","setFetchState","then","respondo","catch","eraro","console","error","response","status","Error","silaboj","blissimbolo","vorttipo","signifo","frazaSignifo","__html","ujoj","map","ujo","i","noto","length","radikoj","r","reduce","lasta","sekva","inflektitajFormoj","inflekcio","inflektitaFormo","get"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { Link, useParams } from \"react-router-dom\";\r\nimport { alporti, PlenaVortoRespondo } from \"../API\";\r\n\r\nimport \"./Vorto.scss\";\r\nimport { Timeran } from \"./Timeran\";\r\n\r\nconst inflekcioj = new Map(\r\n   Object.entries({\r\n      Infinitivo: \"Infinitive\",\r\n      Difinito: \"Definite\",\r\n      UnuNombro: \"Singular\",\r\n      PluraNombro: \"Plural\",\r\n      Fokuso: \"Focus\",\r\n      Havaĵo: \"Possession\",\r\n      Progresivo: \"Progressive\",\r\n      Perfekto: \"Perfect\",\r\n      Intenco: \"Intention\",\r\n      Desiderativo: \"Desiderative\",\r\n      PredikativoEsti: \"Predicative identity\",\r\n      AtributivoEstiAntaŭ: \"Attributive identity (prefix)\",\r\n      AtributivoEstiMalantaŭ: \"Attributive identity (postfix)\",\r\n      Havado: \"Possessive\",\r\n      UnuHavado: \"Possessive (singular)\",\r\n      PluraHavado: \"Possessive (plural)\",\r\n      Imperativo: \"Imperative\",\r\n      Argumento1: \"Slot-1 argument\",\r\n      Argumento2: \"Slot-2 argument\",\r\n      Argumento3: \"Slot-3 argument\",\r\n      Ekzistado: \"Existential\",\r\n      Hortativo: \"Hortative\",\r\n      Translativo: \"Translative\",\r\n      Ĝerundo: \"Gerund\",\r\n      SpecifaĜerundo: \"Specific gerund\",\r\n      PartaUjo1: \"Slot-1 partial\",\r\n      PartaUjo2: \"Slot-2 partial\",\r\n      PartaUjo3: \"Slot-3 partial\",\r\n      UnueUjo2: \"Slot-2 first\",\r\n      UnueUjo3: \"Slot-3 first\",\r\n      Igo: \"Causative\",\r\n      Sola: \"Standalone\",\r\n      Etigo: \"Diminutive\",\r\n      Reflekcio: \"Reflexive\",\r\n      Okazo: \"Occurrence\",\r\n      AktualaOkazo: \"Ongoing occurrence\",\r\n      FinitaOkazo: \"Complete occurrence\",\r\n      Hipoteza: \"Hypothetical\",\r\n      Kvalito: \"Quality\",\r\n      Optativo: \"Optative\",\r\n   })\r\n);\r\n\r\ninterface Params {\r\n   vorto: string;\r\n}\r\n\r\ntype Ŝtato = \"alportado\" | \"alportita\" | \"netrovita\" | \"eraro\";\r\n\r\nexport function Vorto() {\r\n   const { vorto } = useParams<Params>();\r\n   const [rezulto, setResult] = useState<PlenaVortoRespondo | undefined>();\r\n   const [ŝtato, setFetchState] = useState<Ŝtato>(\"alportado\");\r\n\r\n   useEffect(() => {\r\n      setFetchState(\"alportado\");\r\n      alporti(vorto)\r\n         .then((respondo) => {\r\n            setResult(respondo);\r\n            setFetchState(\"alportita\");\r\n         })\r\n         .catch((eraro) => {\r\n            console.error(eraro.response);\r\n            if (eraro.response.status === 404) {\r\n               setFetchState(\"netrovita\");\r\n            } else {\r\n               setFetchState(\"eraro\");\r\n            }\r\n         });\r\n   }, [vorto]);\r\n\r\n   if (ŝtato === \"alportado\") return <div>Loading...</div>;\r\n   if (ŝtato === \"netrovita\") return <div>Word not found: {vorto}</div>;\r\n   if (ŝtato === \"eraro\")\r\n      return <div>A server-side error occurred when fetching {vorto}.</div>;\r\n   if (rezulto == null) throw new Error(\"Unreachable state\");\r\n\r\n   return (\r\n      <div>\r\n         <h2 className=\"vorto\">{rezulto.vorto}</h2>\r\n         <Timeran alteco={25} silaboj={rezulto.silaboj} />\r\n         {rezulto.blissimbolo != null ? (\r\n            <Timeran\r\n               alteco={25}\r\n               silaboj={rezulto.silaboj}\r\n               bliss={rezulto.blissimbolo}\r\n            />\r\n         ) : null}\r\n         <div className=\"streko\" />\r\n         <p className=\"vorttipo\">{rezulto.vorttipo}</p>\r\n         <p>{rezulto.signifo}</p>\r\n         {rezulto.frazaSignifo != null ? (\r\n            <p>\r\n               In context:{\" \"}\r\n               <span\r\n                  dangerouslySetInnerHTML={{ __html: rezulto.frazaSignifo }}\r\n               />\r\n            </p>\r\n         ) : null}\r\n         <p>\r\n            {rezulto.ujoj?.map((ujo, i) =>\r\n               ujo == null\r\n                  ? null\r\n                  : [\r\n                       <span>\r\n                          Slot {i + 1}: {ujo}\r\n                       </span>,\r\n                       <br />,\r\n                    ]\r\n            )}\r\n         </p>\r\n         {rezulto.noto.length > 0 ? (\r\n            <p>\r\n               Notes:{\" \"}\r\n               <span dangerouslySetInnerHTML={{ __html: rezulto.noto }} />\r\n            </p>\r\n         ) : null}\r\n         {rezulto.radikoj.length > 0 ? (\r\n            <p>\r\n               Roots:{\" \"}\r\n               {rezulto?.radikoj\r\n                  .map((r) => (\r\n                     <Link to={`/word/${r}`} key={r}>\r\n                        {r}\r\n                     </Link>\r\n                  ))\r\n                  .reduce((lasta, sekva) => [lasta, \", \", sekva] as any)}\r\n            </p>\r\n         ) : null}\r\n         {rezulto?.inflektitajFormoj == null\r\n            ? null\r\n            : [\r\n                 <h3 key=\"h3\">Inflected forms</h3>,\r\n                 <table className=\"inflekcio-tabelo\" key=\"tabelo\">\r\n                    <thead>\r\n                       <tr>\r\n                          <th>Inflection</th>\r\n                          <th>Inflected form</th>\r\n                       </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                       {Object.entries(rezulto.inflektitajFormoj).map(\r\n                          ([inflekcio, inflektitaFormo]) => (\r\n                             <tr key={inflekcio}>\r\n                                <td>\r\n                                   {inflekcioj.get(inflekcio) || inflekcio}\r\n                                </td>\r\n                                <td>{inflektitaFormo}</td>\r\n                             </tr>\r\n                          )\r\n                       )}\r\n                    </tbody>\r\n                 </table>,\r\n              ]}\r\n      </div>\r\n   );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}