{"ast":null,"code":"var _jsxFileName = \"D:\\\\Projects\\\\Krestia\\\\KrestiaServilo\\\\ClientApp\\\\src\\\\Partoj\\\\APIKomponanto.tsx\";\nimport { useEffect, useState } from \"react\";\nimport * as React from \"react\";\nexport function APIKomponanto(alportilo, komponanto) {\n  const [ŝtato, setFetchState] = useState(\"alportado\");\n  const [rezulto, setResult] = useState();\n  useEffect(() => {\n    setFetchState(\"alportado\");\n    alportilo().then(rezulto => {\n      setResult(rezulto);\n      setFetchState(\"alportita\");\n    }).catch(eraro => {\n      setFetchState(\"eraro\");\n      console.error(eraro);\n    });\n  }, [alportilo]);\n  if (ŝtato === \"alportado\") return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 38\n    }\n  }, \"Loading\");\n  if (ŝtato === \"eraro\") return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 14\n    }\n  }, \"An error occurred while fetching the word list.\");\n  if (rezulto == null) throw new Error(\"Unreachable state\");\n  return komponanto(rezulto);\n}","map":{"version":3,"sources":["D:/Projects/Krestia/KrestiaServilo/ClientApp/src/Partoj/APIKomponanto.tsx"],"names":["useEffect","useState","React","APIKomponanto","alportilo","komponanto","ŝtato","setFetchState","rezulto","setResult","then","catch","eraro","console","error","Error"],"mappings":";AAAA,SAAsBA,SAAtB,EAAiCC,QAAjC,QAAgD,OAAhD;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;AAIA,OAAO,SAASC,aAAT,CACJC,SADI,EAEJC,UAFI,EAGL;AACC,QAAM,CAACC,KAAD,EAAQC,aAAR,IAAyBN,QAAQ,CAAQ,WAAR,CAAvC;AACA,QAAM,CAACO,OAAD,EAAUC,SAAV,IAAuBR,QAAQ,EAArC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACbO,IAAAA,aAAa,CAAC,WAAD,CAAb;AACAH,IAAAA,SAAS,GACLM,IADJ,CACSF,OAAO,IAAI;AACdC,MAAAA,SAAS,CAACD,OAAD,CAAT;AACAD,MAAAA,aAAa,CAAC,WAAD,CAAb;AACF,KAJJ,EAKII,KALJ,CAKUC,KAAK,IAAI;AACbL,MAAAA,aAAa,CAAC,OAAD,CAAb;AACAM,MAAAA,OAAO,CAACC,KAAR,CAAcF,KAAd;AACF,KARJ;AASF,GAXQ,EAWN,CAACR,SAAD,CAXM,CAAT;AAaA,MAAIE,KAAK,KAAK,WAAd,EAA2B,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAP;AAC3B,MAAIA,KAAK,KAAK,OAAd,EACG,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uDAAP;AACH,MAAIE,OAAO,IAAI,IAAf,EAAqB,MAAM,IAAIO,KAAJ,CAAU,mBAAV,CAAN;AAErB,SAAOV,UAAU,CAACG,OAAD,CAAjB;AACF","sourcesContent":["import {ReactElement, useEffect, useState} from \"react\";\r\nimport * as React from \"react\";\r\n\r\ntype Ŝtato = \"alportado\" | \"alportita\" | \"eraro\";\r\n\r\nexport function APIKomponanto<TProps>(\r\n   alportilo: () => Promise<TProps>,\r\n   komponanto: (props: TProps) => ReactElement<TProps>\r\n) {\r\n   const [ŝtato, setFetchState] = useState<Ŝtato>(\"alportado\");\r\n   const [rezulto, setResult] = useState<TProps | undefined>();\r\n\r\n   useEffect(() => {\r\n      setFetchState(\"alportado\");\r\n      alportilo()\r\n         .then(rezulto => {\r\n            setResult(rezulto);\r\n            setFetchState(\"alportita\");\r\n         })\r\n         .catch(eraro => {\r\n            setFetchState(\"eraro\");\r\n            console.error(eraro);\r\n         });\r\n   }, [alportilo]);\r\n\r\n   if (ŝtato === \"alportado\") return <div>Loading</div>;\r\n   if (ŝtato === \"eraro\")\r\n      return <div>An error occurred while fetching the word list.</div>;\r\n   if (rezulto == null) throw new Error(\"Unreachable state\");\r\n\r\n   return komponanto(rezulto);\r\n}\r\n"]},"metadata":{},"sourceType":"module"}