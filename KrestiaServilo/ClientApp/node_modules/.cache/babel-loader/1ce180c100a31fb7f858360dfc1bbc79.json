{"ast":null,"code":"var _jsxFileName = \"D:\\\\Projects\\\\Krestia\\\\KrestiaServilo\\\\ClientApp\\\\src\\\\Partoj\\\\Trovi.tsx\";\nimport React, { useEffect, useState } from \"react\";\nimport { Link, useParams } from \"react-router-dom\";\nimport { trovi } from \"../API\";\nimport \"./Trovi.scss\";\nexport const inflekcioj = new Map(Object.entries({\n  Infinitivo: \"INF\",\n  Difinito: \"DEF\",\n  UnuNombro: \"SING\",\n  Havaĵo: \"POSN\",\n  UnuHavaĵo: \"POSN_SING\",\n  PluraHavaĵo: \"POSN_PLUR\",\n  PluraNombro: \"PLUR\",\n  Progresivo: \"PROG\",\n  Perfekto: \"STOP\",\n  Estonteco: \"FUTR\",\n  Desiderativo: \"DES\",\n  PredikativoEsti: \"PRED_IS\",\n  AtributivoEstiAntaŭ: \"ATTR_IS>\",\n  AtributivoEstiMalantaŭ: \"ATTR_IS<\",\n  Havado: \"POSS\",\n  UnuHavado: \"POSS_SING\",\n  PluraHavado: \"POSS_PLUR\",\n  AtributativoHavi: \"ATTR_POSS\",\n  Imperativo: \"IMPR\",\n  Argumento1: \"ARG1\",\n  Argumento2: \"ARG2\",\n  Argumento3: \"ARG3\",\n  Ekzistado: \"EXST\",\n  UnuEkzistado: \"EXST_SING\",\n  PluraEkzistado: \"EXST_PLUR\",\n  Invito: \"HORT\",\n  Translativo: \"TRAN\",\n  Ĝerundo: \"GRND\",\n  SpecifaĜerundo: \"SGND\",\n  PartaUjo1: \"PRT1\",\n  PartaUjo2: \"PRT2\",\n  PartaUjo3: \"PRT3\",\n  Pasivigo: \"PASV\",\n  Igo: \"CAUS\",\n  SolaFormo: \"-\",\n  Egigo: \"INTS\",\n  Etigo: \"DIMN\",\n  Sola: \"STDL\",\n  UnuSola: \"STDL_SING\",\n  PluraSola: \"STDL_PLUR\",\n  Reflekcio: \"RFLX\",\n  Okazo: \"OCCR\",\n  AktualaOkazo: \"COCR\",\n  FinitaOkazo: \"FOCR\",\n  UnueUjo2: \"FST2\",\n  UnueUjo3: \"FST3\",\n  Intenco: \"INTN\",\n  Kvalito: \"QUAL\",\n  Hipoteza: \"HYP\"\n}));\n\nfunction inflektajŜtupoj(rezulto) {\n  var _rezulto$malinflektaj;\n\n  return `It is inflected as ${rezulto.gloso}-${(_rezulto$malinflektaj = rezulto.malinflektajŜtupoj) === null || _rezulto$malinflektaj === void 0 ? void 0 : _rezulto$malinflektaj.reverse().map(ŝ => inflekcioj.get(ŝ) || ŝ).join(\"-\")}.`;\n}\n\nfunction specialaRezulto(rezulto, peto) {\n  if (rezulto.plenigitaVorto != null) {\n    const ligoAlPlenigita = /*#__PURE__*/React.createElement(Link, {\n      to: `/word/${rezulto.plenigitaVorto}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 10\n      }\n    }, rezulto.plenigitaVorto);\n\n    if (rezulto.malinflektitaVorto != null) {\n      return /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 13\n        }\n      }, peto, \" is an inflected form of a reduced form of\", \" \", ligoAlPlenigita, \". \", /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 35\n        }\n      }), \" \", inflektajŜtupoj(rezulto));\n    }\n\n    return /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 10\n      }\n    }, peto, \" is a reduced form of \", ligoAlPlenigita, \".\");\n  }\n\n  if (rezulto.malinflektitaVorto != null) {\n    return /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 10\n      }\n    }, peto, \" is an inflected form of\", \" \", /*#__PURE__*/React.createElement(Link, {\n      to: `/word/${rezulto.malinflektitaVorto}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 13\n      }\n    }, rezulto.malinflektitaVorto), \". \", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 15\n      }\n    }), \" \", inflektajŜtupoj(rezulto));\n  }\n\n  if (rezulto.nombroRezulto != null) {\n    return /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 10\n      }\n    }, peto, \" is the number \", rezulto.nombroRezulto, \".\");\n  }\n\n  return null;\n}\n\nexport function Trovi() {\n  const {\n    peto\n  } = useParams();\n  const [rezulto, setResult] = useState(undefined);\n  const [ŝtato, setSearchState] = useState(\"trovado\");\n  useEffect(() => {\n    setSearchState(\"trovado\");\n    trovi(peto).then(rezulto => {\n      setSearchState(\"trovita\");\n      setResult(rezulto);\n    }).catch(() => {\n      setSearchState(\"eraro\");\n    });\n  }, [peto]);\n  const glosoPeto = peto.trim().split(\" \");\n  if (ŝtato === \"eraro\") return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 14\n    }\n  }, \"An error occurred during the search. Please try again.\");\n  if (ŝtato === \"trovado\" || rezulto == null || glosoPeto.length > 1 && rezulto.glosajVortoj != null && glosoPeto.length > (rezulto.glosajVortoj.length || 0)) return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 14\n    }\n  }, \"Searching...\");\n  const speciala = specialaRezulto(rezulto, peto);\n\n  if (rezulto.rezultoj.length === 0 && rezulto.plenigitaVorto == null && rezulto.malinflektitaVorto == null && rezulto.glosajVortoj == null && rezulto.nombroRezulto == null) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 14\n      }\n    }, \"No results for \\\"\", peto, \"\\\".\");\n  }\n\n  let glosaRezulto = null;\n\n  if (rezulto.glosajVortoj != null) {\n    const vortoj = peto.split(\" \");\n    glosaRezulto = /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 10\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 13\n      }\n    }, \"Gloss result for \\\"\", peto, \"\\\":\"), /*#__PURE__*/React.createElement(\"table\", {\n      className: \"gloso-tabelo\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"thead\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 16\n      }\n    }, /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 22\n      }\n    }, \"Word\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 22\n      }\n    }, \"Base\"), /*#__PURE__*/React.createElement(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 22\n      }\n    }, \"Gloss\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 16\n      }\n    }, vortoj.map((v, i) => {\n      var _rezulto$glosajŜtupoj, _i;\n\n      return /*#__PURE__*/React.createElement(\"tr\", {\n        key: v,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 22\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 25\n        }\n      }, v), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 25\n        }\n      }, (rezulto === null || rezulto === void 0 ? void 0 : rezulto.bazajVortoj)[i].length === 0 ? null : /*#__PURE__*/React.createElement(Link, {\n        to: `/word/${(rezulto === null || rezulto === void 0 ? void 0 : rezulto.bazajVortoj)[i]}`,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 31\n        }\n      }, (rezulto === null || rezulto === void 0 ? void 0 : rezulto.bazajVortoj)[i])), /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 25\n        }\n      }, (rezulto === null || rezulto === void 0 ? void 0 : rezulto.glosajVortoj)[i], (rezulto === null || rezulto === void 0 ? void 0 : (_rezulto$glosajŜtupoj = rezulto.glosajŜtupoj) === null || _rezulto$glosajŜtupoj === void 0 ? void 0 : _rezulto$glosajŜtupoj.length) > 0 ? (_i = (rezulto === null || rezulto === void 0 ? void 0 : rezulto.glosajŜtupoj)[i]) === null || _i === void 0 ? void 0 : _i.reverse().map(ŝ => `-${inflekcioj.get(ŝ) || ŝ}`).join(\"\") : null));\n    }))));\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 7\n    }\n  }, glosaRezulto, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"peto\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 10\n    }\n  }, \"Search results for \\\"\", peto, \"\\\":\"), speciala == null ? null : /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 37\n    }\n  }, speciala), rezulto.rezultoj.map(r => /*#__PURE__*/React.createElement(\"div\", {\n    className: \"rezulto\",\n    key: r.vorto,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"rezulto-vorto\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 16\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: `/word/${r.vorto}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 19\n    }\n  }, r.vorto)), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"rezulto-signifo\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 16\n    }\n  }, r.signifo))));\n}","map":{"version":3,"sources":["D:/Projects/Krestia/KrestiaServilo/ClientApp/src/Partoj/Trovi.tsx"],"names":["React","useEffect","useState","Link","useParams","trovi","inflekcioj","Map","Object","entries","Infinitivo","Difinito","UnuNombro","Havaĵo","UnuHavaĵo","PluraHavaĵo","PluraNombro","Progresivo","Perfekto","Estonteco","Desiderativo","PredikativoEsti","AtributivoEstiAntaŭ","AtributivoEstiMalantaŭ","Havado","UnuHavado","PluraHavado","AtributativoHavi","Imperativo","Argumento1","Argumento2","Argumento3","Ekzistado","UnuEkzistado","PluraEkzistado","Invito","Translativo","Ĝerundo","SpecifaĜerundo","PartaUjo1","PartaUjo2","PartaUjo3","Pasivigo","Igo","SolaFormo","Egigo","Etigo","Sola","UnuSola","PluraSola","Reflekcio","Okazo","AktualaOkazo","FinitaOkazo","UnueUjo2","UnueUjo3","Intenco","Kvalito","Hipoteza","inflektajŜtupoj","rezulto","gloso","malinflektajŜtupoj","reverse","map","ŝ","get","join","specialaRezulto","peto","plenigitaVorto","ligoAlPlenigita","malinflektitaVorto","nombroRezulto","Trovi","setResult","undefined","ŝtato","setSearchState","then","catch","glosoPeto","trim","split","length","glosajVortoj","speciala","rezultoj","glosaRezulto","vortoj","v","i","bazajVortoj","glosajŜtupoj","r","vorto","signifo"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { Link, useParams } from \"react-router-dom\";\r\nimport { trovi, VortoRezulto } from \"../API\";\r\n\r\nimport \"./Trovi.scss\";\r\n\r\nexport const inflekcioj = new Map(\r\n   Object.entries({\r\n      Infinitivo: \"INF\",\r\n      Difinito: \"DEF\",\r\n      UnuNombro: \"SING\",\r\n      Havaĵo: \"POSN\",\r\n      UnuHavaĵo: \"POSN_SING\",\r\n      PluraHavaĵo: \"POSN_PLUR\",\r\n      PluraNombro: \"PLUR\",\r\n      Progresivo: \"PROG\",\r\n      Perfekto: \"STOP\",\r\n      Estonteco: \"FUTR\",\r\n      Desiderativo: \"DES\",\r\n      PredikativoEsti: \"PRED_IS\",\r\n      AtributivoEstiAntaŭ: \"ATTR_IS>\",\r\n      AtributivoEstiMalantaŭ: \"ATTR_IS<\",\r\n      Havado: \"POSS\",\r\n      UnuHavado: \"POSS_SING\",\r\n      PluraHavado: \"POSS_PLUR\",\r\n      AtributativoHavi: \"ATTR_POSS\",\r\n      Imperativo: \"IMPR\",\r\n      Argumento1: \"ARG1\",\r\n      Argumento2: \"ARG2\",\r\n      Argumento3: \"ARG3\",\r\n      Ekzistado: \"EXST\",\r\n      UnuEkzistado: \"EXST_SING\",\r\n      PluraEkzistado: \"EXST_PLUR\",\r\n      Invito: \"HORT\",\r\n      Translativo: \"TRAN\",\r\n      Ĝerundo: \"GRND\",\r\n      SpecifaĜerundo: \"SGND\",\r\n      PartaUjo1: \"PRT1\",\r\n      PartaUjo2: \"PRT2\",\r\n      PartaUjo3: \"PRT3\",\r\n      Pasivigo: \"PASV\",\r\n      Igo: \"CAUS\",\r\n      SolaFormo: \"-\",\r\n      Egigo: \"INTS\",\r\n      Etigo: \"DIMN\",\r\n      Sola: \"STDL\",\r\n      UnuSola: \"STDL_SING\",\r\n      PluraSola: \"STDL_PLUR\",\r\n      Reflekcio: \"RFLX\",\r\n      Okazo: \"OCCR\",\r\n      AktualaOkazo: \"COCR\",\r\n      FinitaOkazo: \"FOCR\",\r\n      UnueUjo2: \"FST2\",\r\n      UnueUjo3: \"FST3\",\r\n      Intenco: \"INTN\",\r\n      Kvalito: \"QUAL\",\r\n      Hipoteza: \"HYP\",\r\n   })\r\n);\r\n\r\ninterface Params {\r\n   peto: string;\r\n}\r\n\r\nfunction inflektajŜtupoj(rezulto: VortoRezulto) {\r\n   return `It is inflected as ${rezulto.gloso}-${rezulto.malinflektajŜtupoj\r\n      ?.reverse()\r\n      .map((ŝ) => inflekcioj.get(ŝ) || ŝ)\r\n      .join(\"-\")}.`;\r\n}\r\n\r\nfunction specialaRezulto(rezulto: VortoRezulto, peto: string) {\r\n   if (rezulto.plenigitaVorto != null) {\r\n      const ligoAlPlenigita = (\r\n         <Link to={`/word/${rezulto.plenigitaVorto}`}>\r\n            {rezulto.plenigitaVorto}\r\n         </Link>\r\n      );\r\n      if (rezulto.malinflektitaVorto != null) {\r\n         return (\r\n            <span>\r\n               {peto} is an inflected form of a reduced form of{\" \"}\r\n               {ligoAlPlenigita}. <br /> {inflektajŜtupoj(rezulto)}\r\n            </span>\r\n         );\r\n      }\r\n      return (\r\n         <span>\r\n            {peto} is a reduced form of {ligoAlPlenigita}.\r\n         </span>\r\n      );\r\n   }\r\n   if (rezulto.malinflektitaVorto != null) {\r\n      return (\r\n         <span>\r\n            {peto} is an inflected form of{\" \"}\r\n            <Link to={`/word/${rezulto.malinflektitaVorto}`}>\r\n               {rezulto.malinflektitaVorto}\r\n            </Link>\r\n            . <br /> {inflektajŜtupoj(rezulto)}\r\n         </span>\r\n      );\r\n   }\r\n   if (rezulto.nombroRezulto != null) {\r\n      return (\r\n         <span>\r\n            {peto} is the number {rezulto.nombroRezulto}.\r\n         </span>\r\n      );\r\n   }\r\n   return null;\r\n}\r\n\r\ntype Ŝtato = \"trovado\" | \"trovita\" | \"eraro\";\r\n\r\nexport function Trovi() {\r\n   const { peto } = useParams<Params>();\r\n   const [rezulto, setResult] = useState<VortoRezulto | undefined>(undefined);\r\n   const [ŝtato, setSearchState] = useState<Ŝtato>(\"trovado\");\r\n\r\n   useEffect(() => {\r\n      setSearchState(\"trovado\");\r\n      trovi(peto)\r\n         .then((rezulto) => {\r\n            setSearchState(\"trovita\");\r\n            setResult(rezulto);\r\n         })\r\n         .catch(() => {\r\n            setSearchState(\"eraro\");\r\n         });\r\n   }, [peto]);\r\n\r\n   const glosoPeto = peto.trim().split(\" \");\r\n\r\n   if (ŝtato === \"eraro\")\r\n      return <div>An error occurred during the search. Please try again.</div>;\r\n\r\n   if (\r\n      ŝtato === \"trovado\" ||\r\n      rezulto == null ||\r\n      (glosoPeto.length > 1 &&\r\n         rezulto.glosajVortoj != null &&\r\n         glosoPeto.length > (rezulto.glosajVortoj.length || 0))\r\n   )\r\n      return <div>Searching...</div>;\r\n\r\n   const speciala = specialaRezulto(rezulto, peto);\r\n   if (\r\n      rezulto.rezultoj.length === 0 &&\r\n      rezulto.plenigitaVorto == null &&\r\n      rezulto.malinflektitaVorto == null &&\r\n      rezulto.glosajVortoj == null &&\r\n      rezulto.nombroRezulto == null\r\n   ) {\r\n      return <div>No results for \"{peto}\".</div>;\r\n   }\r\n\r\n   let glosaRezulto = null;\r\n   if (rezulto.glosajVortoj != null) {\r\n      const vortoj = peto.split(\" \");\r\n      glosaRezulto = (\r\n         <div>\r\n            <p>Gloss result for \"{peto}\":</p>\r\n            <table className=\"gloso-tabelo\">\r\n               <thead>\r\n                  <tr>\r\n                     <th>Word</th>\r\n                     <th>Base</th>\r\n                     <th>Gloss</th>\r\n                  </tr>\r\n               </thead>\r\n               <tbody>\r\n                  {vortoj.map((v, i) => (\r\n                     <tr key={v}>\r\n                        <td>{v}</td>\r\n                        <td>\r\n                           {rezulto?.bazajVortoj![i].length === 0 ? null : (\r\n                              <Link to={`/word/${rezulto?.bazajVortoj![i]}`}>\r\n                                 {rezulto?.bazajVortoj![i]}\r\n                              </Link>\r\n                           )}\r\n                        </td>\r\n                        <td>\r\n                           {rezulto?.glosajVortoj![i]}\r\n                           {rezulto?.glosajŜtupoj?.length! > 0\r\n                              ? rezulto\r\n                                   ?.glosajŜtupoj![i]?.reverse()\r\n                                   .map((ŝ) => `-${inflekcioj.get(ŝ) || ŝ}`)\r\n                                   .join(\"\")\r\n                              : null}\r\n                        </td>\r\n                     </tr>\r\n                  ))}\r\n               </tbody>\r\n            </table>\r\n         </div>\r\n      );\r\n   }\r\n\r\n   return (\r\n      <div>\r\n         {glosaRezulto}\r\n         <div className=\"peto\">Search results for \"{peto}\":</div>\r\n         {speciala == null ? null : <div>{speciala}</div>}\r\n         {rezulto.rezultoj.map((r) => (\r\n            <div className=\"rezulto\" key={r.vorto}>\r\n               <span className=\"rezulto-vorto\">\r\n                  <Link to={`/word/${r.vorto}`}>{r.vorto}</Link>\r\n               </span>\r\n               <span className=\"rezulto-signifo\">{r.signifo}</span>\r\n            </div>\r\n         ))}\r\n      </div>\r\n   );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}